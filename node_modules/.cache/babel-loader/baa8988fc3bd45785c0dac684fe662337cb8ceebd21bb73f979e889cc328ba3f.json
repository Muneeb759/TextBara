{"ast":null,"code":"var _jsxFileName = \"/home/osama/Muneeb/React/TextUtils/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navbar from \"./components(TextUtils)/Navbar\";\nimport About from \"./components(TextUtils)/About\";\nimport TextForm from \"./components(TextUtils)/TextForm\";\nimport React, { useState } from \"react\";\nimport { message } from \"antd\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const [msg, Alert] = message.useMessage();\n  const showAlert = (message, type) => {\n    console.log(\"type\", type);\n    setAlert({\n      message: message,\n      type: type\n    });\n    msg.open({\n      type: type,\n      message: \"Hello world!\"\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 100);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n      document.title = \"TextUtils - Darkmode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"grey\";\n      showAlert(\"Light mode has been enabled!\", \"success\");\n      document.title = \"TextUtils - Lightmode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Alert, /*#__PURE__*/_jsxDEV(Navbar, {\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"7+kXK4i8U1ndKF8fYtFD/PBr9cQ=\", false, function () {\n  return [message.useMessage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","About","TextForm","React","useState","message","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setAlert","msg","Alert","useMessage","showAlert","type","console","log","open","setTimeout","toggleMode","document","body","style","backgroundColor","color","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/osama/Muneeb/React/TextUtils/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components(TextUtils)/Navbar\";\nimport About from \"./components(TextUtils)/About\";\nimport TextForm from \"./components(TextUtils)/TextForm\";\nimport React, { useState } from \"react\";\nimport { message } from \"antd\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const [msg, Alert] = message.useMessage();\n\n  const showAlert = (message, type) => {\n    console.log(\"type\", type);\n    setAlert({\n      message: message,\n      type: type,\n    });\n    msg.open({\n      type: type,\n      message: \"Hello world!\",\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 100);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n      document.title = \"TextUtils - Darkmode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"grey\";\n      showAlert(\"Light mode has been enabled!\", \"success\");\n      document.title = \"TextUtils - Lightmode\";\n    }\n  };\n  return (\n    <>\n      {Alert}\n      <Navbar toggleMode={toggleMode} />\n      <button></button>\n\n      {/* <Routes>\n        <Route\n          path=\"/*\"\n          element={\n            <TextForm\n              Alert={Alert}\n              showAlert={showAlert}\n              heading=\"Enter the Text to analyze\"\n              mode={mode}\n            />\n          }\n        />\n\n        <Route\n          path=\"/about\"\n          showAlert={showAlert}\n          mode={mode}\n          element={<About toggleMode={toggleMode} />}\n        />\n      </Routes> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,gCAAgC;AACnD,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,MAAM;AAC9B,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,GAAG,EAAEC,KAAK,CAAC,GAAGd,OAAO,CAACe,UAAU,CAAC,CAAC;EAEzC,MAAMC,SAAS,GAAGA,CAAChB,OAAO,EAAEiB,IAAI,KAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;IACzBL,QAAQ,CAAC;MACPZ,OAAO,EAAEA,OAAO;MAChBiB,IAAI,EAAEA;IACR,CAAC,CAAC;IACFJ,GAAG,CAACO,IAAI,CAAC;MACPH,IAAI,EAAEA,IAAI;MACVjB,OAAO,EAAE;IACX,CAAC,CAAC;IACFqB,UAAU,CAAC,MAAM;MACfT,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIb,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfa,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCX,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;MACnDO,QAAQ,CAACK,KAAK,GAAG,sBAAsB;IACzC,CAAC,MAAM;MACLlB,OAAO,CAAC,OAAO,CAAC;MAChBa,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,MAAM;MAClCX,SAAS,CAAC,8BAA8B,EAAE,SAAS,CAAC;MACpDO,QAAQ,CAACK,KAAK,GAAG,uBAAuB;IAC1C;EACF,CAAC;EACD,oBACExB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,GACGf,KAAK,eACNV,OAAA,CAACT,MAAM;MAAC2B,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAAA,eAsBjB,CAAC;AAEP;AAACzB,EAAA,CA/DQD,GAAG;EAAA,QAGWP,OAAO,CAACe,UAAU;AAAA;AAAAmB,EAAA,GAHhC3B,GAAG;AAiEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}