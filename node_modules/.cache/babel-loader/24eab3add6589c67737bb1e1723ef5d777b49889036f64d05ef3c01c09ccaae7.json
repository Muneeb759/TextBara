{"ast":null,"code":"import\"./App.css\";import Navbar from\"./components(TextUtils)/Navbar\";import About from\"./components(TextUtils)/About\";import TextForm from\"./components(TextUtils)/TextForm\";import React,{useState}from\"react\";import{message}from\"antd\";import{Route,Routes}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setmode]=useState(\"light\");const[alert,setAlert]=useState(null);const[msg,Alert]=message.useMessage();const showAlert=(message,type)=>{console.log(\"type\",type);msg.open({type:type,content:message});};document.title=\"TextUtils\";const toggleMode=()=>{if(mode===\"light\"){setmode(\"dark\");document.body.style.backgroundColor=\"#042743\";document.body.style.color=\"white\";showAlert(\"Dark mode has been enabled!\",\"success\");document.title=\"TextUtils - Darkmode\";}else{setmode(\"light\");document.body.style.backgroundColor=\"white\";document.body.style.color=\"grey\";showAlert(\"Light mode has been enabled!\",\"success\");document.title=\"TextUtils - Lightmode\";}};return/*#__PURE__*/_jsxs(_Fragment,{children:[Alert,/*#__PURE__*/_jsx(Navbar,{toggleMode:toggleMode,mode:mode}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter the Text to analyze\",mode:mode})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{toggleMode:toggleMode,mode:mode})})]})]});}export default App;","map":{"version":3,"names":["Navbar","About","TextForm","React","useState","message","Route","Routes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setmode","alert","setAlert","msg","Alert","useMessage","showAlert","type","console","log","open","content","document","title","toggleMode","body","style","backgroundColor","color","children","path","element","heading"],"sources":["/home/osama/Muneeb/React/TextUtils/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components(TextUtils)/Navbar\";\nimport About from \"./components(TextUtils)/About\";\nimport TextForm from \"./components(TextUtils)/TextForm\";\nimport React, { useState } from \"react\";\nimport { message } from \"antd\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const [msg, Alert] = message.useMessage();\n\n  const showAlert = (message, type) => {\n    console.log(\"type\", type);\n\n    msg.open({\n      type: type,\n      content: message,\n    });\n  };\n  document.title = \"TextUtils\";\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n      document.title = \"TextUtils - Darkmode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"grey\";\n      showAlert(\"Light mode has been enabled!\", \"success\");\n      document.title = \"TextUtils - Lightmode\";\n    }\n  };\n  return (\n    <>\n      {Alert}\n      <Navbar toggleMode={toggleMode} mode={mode} />\n      <Routes>\n        <Route\n          path=\"/*\"\n          element={\n            <TextForm\n              showAlert={showAlert}\n              heading=\"Enter the Text to analyze\"\n              mode={mode}\n            />\n          }\n        />\n\n        <Route\n          path=\"/about\"\n          element={<About toggleMode={toggleMode} mode={mode} />}\n        />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,gCAAgC,CACnD,MAAO,CAAAC,KAAK,KAAM,+BAA+B,CACjD,MAAO,CAAAC,QAAQ,KAAM,kCAAkC,CACvD,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,OAAO,KAAQ,MAAM,CAC9B,OAASC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEjD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACe,GAAG,CAAEC,KAAK,CAAC,CAAGf,OAAO,CAACgB,UAAU,CAAC,CAAC,CAEzC,KAAM,CAAAC,SAAS,CAAGA,CAACjB,OAAO,CAAEkB,IAAI,GAAK,CACnCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEF,IAAI,CAAC,CAEzBJ,GAAG,CAACO,IAAI,CAAC,CACPH,IAAI,CAAEA,IAAI,CACVI,OAAO,CAAEtB,OACX,CAAC,CAAC,CACJ,CAAC,CACDuB,QAAQ,CAACC,KAAK,CAAG,WAAW,CAC5B,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIf,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfY,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CL,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,OAAO,CACnCZ,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACnDM,QAAQ,CAACC,KAAK,CAAG,sBAAsB,CACzC,CAAC,IAAM,CACLb,OAAO,CAAC,OAAO,CAAC,CAChBY,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CL,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,MAAM,CAClCZ,SAAS,CAAC,8BAA8B,CAAE,SAAS,CAAC,CACpDM,QAAQ,CAACC,KAAK,CAAG,uBAAuB,CAC1C,CACF,CAAC,CACD,mBACElB,KAAA,CAAAE,SAAA,EAAAsB,QAAA,EACGf,KAAK,cACNX,IAAA,CAACT,MAAM,EAAC8B,UAAU,CAAEA,UAAW,CAACf,IAAI,CAAEA,IAAK,CAAE,CAAC,cAC9CJ,KAAA,CAACJ,MAAM,EAAA4B,QAAA,eACL1B,IAAA,CAACH,KAAK,EACJ8B,IAAI,CAAC,IAAI,CACTC,OAAO,cACL5B,IAAA,CAACP,QAAQ,EACPoB,SAAS,CAAEA,SAAU,CACrBgB,OAAO,CAAC,2BAA2B,CACnCvB,IAAI,CAAEA,IAAK,CACZ,CACF,CACF,CAAC,cAEFN,IAAA,CAACH,KAAK,EACJ8B,IAAI,CAAC,QAAQ,CACbC,OAAO,cAAE5B,IAAA,CAACR,KAAK,EAAC6B,UAAU,CAAEA,UAAW,CAACf,IAAI,CAAEA,IAAK,CAAE,CAAE,CACxD,CAAC,EACI,CAAC,EACT,CAAC,CAEP,CAEA,cAAe,CAAAD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}